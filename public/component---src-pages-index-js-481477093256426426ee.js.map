{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref5","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","_ref2","allMarkdownRemark","totalCount","edges","map","_ref6","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref3","rhythm","frontmatter","title","_ref4","date","excerpt","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","lincolnTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","src","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-481477093256426426ee.js","sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { FaCompactDisc } from 'react-icons/fa';\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>\n        <h5\n          css={css`\n              display: inline-block;\n            `}\n          >\n            Curated by Skyler Reep.\n        </h5>\n\n        <h1\n          css={css`\n            display: inline-block;\n          `}\n        >\n          Your source for daily eclectic jams.\n        </h1>\n\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `\n}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  css={css`\n                    color: #bbb;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link> \n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography'\nimport lincolnTheme from 'typography-theme-lincoln'\n\nconst typography = new Typography(lincolnTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n}\n    render={data => (\n    <div\n    css={css`\n            margin: 0 auto;\n            max-width: auto;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n            background: rgb(68,241,156);\n            background: linear-gradient(329deg, rgba(68,241,156,1) 0%, rgba(70,93,252,1) 100%);\n            `}\n    >\n        <div\n            css={css`\n            margin: 0 auto;\n            max-width: 750px;\n            padding: ${rhythm(2)};\n            padding-top: ${rhythm(1.5)};\n            background-color: white;\n            opacity: .8;\n            `}\n        >\n\n            <Link to={`/`}>\n            <h3\n                css={css`\n                display: inline-block;\n                font-style: normal;\n                `}\n            >\n                {data.site.siteMetadata.title}\n            </h3>\n            </Link>\n            {children}\n        </div>\n\n        <div\n                css={css`\n                    text-align: center;\n                `}\n            >\n                <img src=\"https://media.giphy.com/media/42ECS6s7l8dzMREFim/giphy.gif\"\n                    css={css`\n                        padding-top: 3rem;\n                        width: 6rem;\n                    `}\n                ></img>\n            </div>\n    </div>\n    )}\n  />\n)","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}